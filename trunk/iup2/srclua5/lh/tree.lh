/* code automatically generated by bin2c -- DO NOT EDIT */
{
/* #include'ing this file in a C program is equivalent to calling
  if (luaL_loadfile(L,"tree.lua")==0) lua_pcall(L, 0, 0, 0); 
*/
/* tree.lua */
static const unsigned char B1[]={
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10,
 45, 45, 32, 84,114,101,101, 32, 99,108, 97,115,115, 32, 13, 10, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10,108,111, 99, 97,
108, 32, 99,116,114,108, 32, 61, 32,123, 13, 10, 32, 32,110,105, 99,107, 32, 61,
 32, 34,116,114,101,101, 34, 44, 13, 10, 32, 32,112, 97,114,101,110,116, 32, 61,
 32,105,117,112, 46, 87, 73, 68, 71, 69, 84, 44, 13, 10, 32, 32, 99,114,101, 97,
116,105,111,110, 32, 61, 32, 34, 34, 44, 13, 10, 32, 32, 99, 97,108,108, 98, 97,
 99,107, 32, 61, 32,123, 13, 10, 32, 32, 32, 32,115,101,108,101, 99,116,105,111,
110, 95, 99, 98, 32, 61, 32, 34,110,110, 34, 44, 13, 10, 32, 32, 32, 32,109,117,
108,116,105,115,101,108,101, 99,116,105,111,110, 95, 99, 98, 32, 61, 32, 34,110,
110, 34, 44, 32, 32, 45, 45, 32,102, 97,107,101, 32,100,101,102,105,110,105,116,
105,111,110, 32,116,111, 32, 98,101, 32,114,101,112,108, 97, 99,101,100, 32, 98,
121, 32,116,114,101,101,102,117,110, 99,115, 32,109,111,100,117,108,101, 13, 10,
 32, 32, 32, 32, 98,114, 97,110, 99,104,111,112,101,110, 95, 99, 98, 32, 61, 32,
 34,110, 34, 44, 13, 10, 32, 32, 32, 32, 98,114, 97,110, 99,104, 99,108,111,115,
101, 95, 99, 98, 32, 61, 32, 34,110, 34, 44, 13, 10, 32, 32, 32, 32,101,120,101,
 99,117,116,101,108,101, 97,102, 95, 99, 98, 32, 61, 32, 34,110, 34, 44, 13, 10,
 32, 32, 32, 32,114,101,110, 97,109,101,110,111,100,101, 95, 99, 98, 32, 61, 32,
 34,110,115, 34, 44, 13, 10, 32, 32, 32, 32,114,101,110, 97,109,101, 95, 99, 98,
 32, 61, 32, 34,110,115, 34, 44, 13, 10, 32, 32, 32, 32,115,104,111,119,114,101,
110, 97,109,101, 95, 99, 98, 32, 61, 32, 34,110, 34, 44, 13, 10, 32, 32, 32, 32,
114,105,103,104,116, 99,108,105, 99,107, 95, 99, 98, 32, 61, 32, 34,110, 34, 44,
 13, 10, 32, 32, 32, 32,100,114, 97,103,100,114,111,112, 95, 99, 98, 32, 61, 32,
 34,110,110,110,110, 34, 44, 13, 10, 32, 32,125, 44, 13, 10, 32, 32,105,110, 99,
108,117,100,101, 32, 61, 32, 34,105,117,112,116,114,101,101, 46,104, 34, 44, 13,
 10, 32, 32,101,120,116,114, 97,102,117,110, 99,115, 32, 61, 32, 49, 44, 13, 10,
125, 13, 10, 13, 10,102,117,110, 99,116,105,111,110, 32,105,117,112, 46, 84,114,
101,101, 83,101,116, 86, 97,108,117,101, 82,101, 99, 40,104, 97,110,100,108,101,
 44, 32,116, 44, 32,105,100, 41, 13, 10, 32, 32,105,102, 32,116, 32, 61, 61, 32,
110,105,108, 32,116,104,101,110, 32,114,101,116,117,114,110, 32,101,110,100, 13,
 10, 32, 32,108,111, 99, 97,108, 32, 99,111,110,116, 32, 61, 32,116, 97, 98,108,
101, 46,103,101,116,110, 40,116, 41, 13, 10, 32, 32,119,104,105,108,101, 32, 99,
111,110,116, 32, 62, 61, 32, 48, 32,100,111, 13, 10, 32, 32, 32, 32,105,102, 32,
116,121,112,101, 32, 40,116, 91, 99,111,110,116, 93, 41, 32, 61, 61, 32, 34,116,
 97, 98,108,101, 34, 32,116,104,101,110, 13, 10, 32, 32, 32, 32, 32, 32,105,102,
 32,116, 91, 99,111,110,116, 93, 46, 98,114, 97,110, 99,104,110, 97,109,101, 32,
126, 61, 32,110,105,108, 32,116,104,101,110, 13, 10, 32, 32, 32, 32, 32, 32, 32,
 32,105,117,112, 46, 83,101,116, 65,116,116,114,105, 98,117,116,101, 40,104, 97,
110,100,108,101, 44, 32, 34, 65, 68, 68, 66, 82, 65, 78, 67, 72, 34, 46, 46,105,
100, 44, 32,116, 91, 99,111,110,116, 93, 46, 98,114, 97,110, 99,104,110, 97,109,
101, 41, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32,105,117,112, 46, 84,114,101,101,
 83,101,116, 86, 97,108,117,101, 82,101, 99, 40,104, 97,110,100,108,101, 44, 32,
116, 91, 99,111,110,116, 93, 44, 32,105,100, 43, 49, 41, 13, 10, 32, 32, 32, 32,
 32, 32,101,110,100, 13, 10, 32, 32, 32, 32,101,108,115,101, 13, 10, 32, 32, 32,
 32, 32, 32,105,102, 32,116, 91, 99,111,110,116, 93, 32,116,104,101,110, 13, 10,
 32, 32, 32, 32, 32, 32, 32, 32,105,117,112, 46, 83,101,116, 65,116,116,114,105,
 98,117,116,101, 40,104, 97,110,100,108,101, 44, 32, 34, 65, 68, 68, 76, 69, 65,
 70, 34, 46, 46,105,100, 44, 32,116, 91, 99,111,110,116, 93, 41, 13, 10, 32, 32,
 32, 32, 32, 32,101,110,100, 13, 10, 32, 32, 32, 32,101,110,100, 13, 10, 32, 32,
 32, 32, 99,111,110,116, 32, 61, 32, 99,111,110,116, 32, 45, 32, 49, 13, 10, 32,
 32, 32,101,110,100, 13, 10,101,110,100, 13, 10, 13, 10,102,117,110, 99,116,105,
111,110, 32,105,117,112, 46, 84,114,101,101, 83,101,116, 86, 97,108,117,101, 40,
104, 97,110,100,108,101, 44, 32,116, 41, 13, 10, 32, 32,105,102, 32,116, 46, 98,
114, 97,110, 99,104,110, 97,109,101, 32,126, 61, 32,110,105,108, 32,116,104,101,
110, 13, 10, 32, 32, 32, 32,105,117,112, 46, 83,101,116, 65,116,116,114,105, 98,
117,116,101, 40,104, 97,110,100,108,101, 44, 32, 34, 78, 65, 77, 69, 34, 44, 32,
116, 46, 98,114, 97,110, 99,104,110, 97,109,101, 41, 13, 10, 32, 32,101,110,100,
 13, 10, 32, 32,105,117,112, 46, 84,114,101,101, 83,101,116, 86, 97,108,117,101,
 82,101, 99, 40,104, 97,110,100,108,101, 44, 32,116, 44, 32, 48, 41, 13, 10,101,
110,100, 13, 10, 13, 10,102,117,110, 99,116,105,111,110, 32, 99,116,114,108, 46,
 99,114,101, 97,116,101, 69,108,101,109,101,110,116, 40, 99,108, 97,115,115, 44,
 32, 97,114,103, 41, 13, 10, 32, 32,114,101,116,117,114,110, 32,105,117,112, 46,
 84,114,101,101, 40, 41, 13, 10,101,110,100, 13, 10, 13, 10,105,117,112, 46, 82,
101,103,105,115,116,101,114, 87,105,100,103,101,116, 40, 99,116,114,108, 41, 13,
 10,105,117,112, 46, 83,101,116, 67,108, 97,115,115, 40, 99,116,114,108, 44, 32,
 34,105,117,112, 32,119,105,100,103,101,116, 34, 41, 13, 10,
};

 if (luaL_loadbuffer(L,(const char*)B1,sizeof(B1),"tree.lua")==0) lua_pcall(L, 0, 0, 0);
}
