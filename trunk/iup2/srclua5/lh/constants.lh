/* code automatically generated by bin2c -- DO NOT EDIT */
{
/* #include'ing this file in a C program is equivalent to calling
  if (luaL_loadfile(L,"constants.lua")==0) lua_pcall(L, 0, 0, 0); 
*/
/* constants.lua */
static const unsigned char B1[]={
 45, 45, 32, 84,104,105,115, 32,102,105,108,101, 32,105,115, 32,101,120,101, 99,
117,116,101,100, 32,119,105,116,104, 32,116,104,101, 32, 34,105,117,112, 34, 32,
116, 97, 98,108,101, 32, 97,108,114,101, 97,100,121, 32, 97,115, 32,116,104,101,
 32,103,108,111, 98, 97,108,105,110,100,101,120, 13, 10, 13, 10, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10, 45, 45, 32, 32, 67, 97,
108,108, 98, 97, 99,107, 32,114,101,116,117,114,110, 32,118, 97,108,117,101,115,
 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 13, 10, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10, 73, 71, 78, 79, 82, 69,
 32, 61, 32, 45, 49, 13, 10, 68, 69, 70, 65, 85, 76, 84, 32, 61, 32, 45, 50, 13,
 10, 67, 76, 79, 83, 69, 32, 61, 32, 45, 51, 13, 10, 67, 79, 78, 84, 73, 78, 85,
 69, 32, 61, 32, 45, 52, 13, 10, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 13, 10, 45, 45, 32, 32, 73,117,112, 80,111,112,117,112,
 32,101, 32, 73,117,112, 83,104,111,119, 88, 89, 32, 32, 32, 32, 32, 32, 32, 32,
 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10,
 67, 69, 78, 84, 69, 82, 32, 61, 32, 54, 53, 53, 51, 53, 13, 10, 76, 69, 70, 84,
 32, 61, 32, 54, 53, 53, 51, 52, 13, 10, 82, 73, 71, 72, 84, 32, 61, 32, 54, 53,
 53, 51, 51, 13, 10, 77, 79, 85, 83, 69, 80, 79, 83, 32, 61, 32, 54, 53, 53, 51,
 50, 13, 10, 67, 85, 82, 82, 69, 78, 84, 32, 61, 32, 54, 53, 53, 51, 49, 13, 10,
 67, 69, 78, 84, 69, 82, 80, 65, 82, 69, 78, 84, 32, 61, 32, 54, 53, 53, 51, 48,
 13, 10, 84, 79, 80, 32, 61, 32, 76, 69, 70, 84, 13, 10, 66, 79, 84, 84, 79, 77,
 32, 61, 32, 82, 73, 71, 72, 84, 13, 10, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 13, 10, 45, 45, 32, 32, 83, 99,114,111,108,108,
 98, 97,114, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 13, 10, 83, 66, 85, 80, 32, 32, 32, 32, 32, 32, 61, 32, 48, 32, 32, 13, 10,
 83, 66, 68, 78, 32, 32, 32, 32, 32, 32, 61, 32, 49, 32, 32, 13, 10, 83, 66, 80,
 71, 85, 80, 32, 32, 32, 32, 61, 32, 50, 32, 32, 13, 10, 83, 66, 80, 71, 68, 78,
 32, 32, 32, 32, 61, 32, 51, 32, 32, 13, 10, 83, 66, 80, 79, 83, 86, 32, 32, 32,
 32, 61, 32, 52, 32, 32, 13, 10, 83, 66, 68, 82, 65, 71, 86, 32, 32, 32, 61, 32,
 53, 32, 32, 13, 10, 83, 66, 76, 69, 70, 84, 32, 32, 32, 32, 61, 32, 54, 32, 32,
 13, 10, 83, 66, 82, 73, 71, 72, 84, 32, 32, 32, 61, 32, 55, 32, 32, 13, 10, 83,
 66, 80, 71, 76, 69, 70, 84, 32, 32, 61, 32, 56, 32, 32, 13, 10, 83, 66, 80, 71,
 82, 73, 71, 72, 84, 32, 61, 32, 57, 32, 32, 13, 10, 83, 66, 80, 79, 83, 72, 32,
 32, 32, 32, 61, 32, 49, 48, 32, 13, 10, 83, 66, 68, 82, 65, 71, 72, 32, 32, 32,
 61, 32, 49, 49, 32, 13, 10, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 13, 10, 45, 45, 32, 32, 83, 72, 79, 87, 95, 67, 66, 32, 32,
 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10,
 83, 72, 79, 87, 32, 61, 32, 48, 13, 10, 82, 69, 83, 84, 79, 82, 69, 32, 61, 32,
 49, 13, 10, 77, 73, 78, 73, 77, 73, 90, 69, 32, 61, 32, 50, 13, 10, 77, 65, 88,
 73, 77, 73, 90, 69, 32, 61, 32, 51, 13, 10, 72, 73, 68, 69, 32, 61, 32, 52, 13,
 10, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13,
 10, 45, 45, 32, 32, 66, 85, 84, 84, 79, 78, 95, 67, 66, 32, 32, 32, 32, 32, 32,
 32, 32, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 13, 10, 66, 85, 84, 84, 79, 78, 49, 32, 61, 32,115,116,114,105,110,103, 46, 98,
121,116,101, 40, 39, 49, 39, 41, 13, 10, 66, 85, 84, 84, 79, 78, 50, 32, 61, 32,
115,116,114,105,110,103, 46, 98,121,116,101, 40, 39, 50, 39, 41, 13, 10, 66, 85,
 84, 84, 79, 78, 51, 32, 61, 32,115,116,114,105,110,103, 46, 98,121,116,101, 40,
 39, 51, 39, 41, 13, 10, 66, 85, 84, 84, 79, 78, 52, 32, 61, 32,115,116,114,105,
110,103, 46, 98,121,116,101, 40, 39, 52, 39, 41, 13, 10, 66, 85, 84, 84, 79, 78,
 53, 32, 61, 32,115,116,114,105,110,103, 46, 98,121,116,101, 40, 39, 53, 39, 41,
 13, 10, 13, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 13, 10, 45, 45, 32, 32, 73,117,112, 79,112,101,110, 13, 10, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 13, 10, 69, 82, 82, 79, 82, 32, 61,
 32, 49, 13, 10, 78, 79, 69, 82, 82, 79, 82, 32, 61, 32, 48, 13, 10, 79, 80, 69,
 78, 69, 68, 32, 61, 32, 45, 49, 13, 10, 73, 78, 86, 65, 76, 73, 68, 32, 61, 32,
 45, 49, 13, 10,
};

 if (luaL_loadbuffer(L,(const char*)B1,sizeof(B1),"constants.lua")==0) lua_pcall(L, 0, 0, 0);
}
